//
//  ClientViewController.swift
//  Restaurant
//
//  Created by Alexey Efimov on 16.08.2023.
//

import UIKit

// MARK: - Delegate Protocols
// –û—Ñ–∏—Ü–∏–∞–Ω—Ç
protocol KitchenViewControllerDelegate: AnyObject {
    func isCrime() -> Bool
    func completeOrder()
}

// –û–ø–ª–∞—Ç–∞
protocol CardViewControllerDelegate: AnyObject {
    func add(card: Card)
    func askForCardAgain()
}
// MARK: - ClientViewController
// –ö–ª–∏–µ–Ω—Ç
final class ClientViewController: UIViewController {
    
    // MARK: - IB Outlets
    @IBOutlet private var clientStatusLabel: UILabel!
    @IBOutlet private var clientActionButton: UIButton!
    @IBOutlet private var policeImageView: UIImageView!
    
    // MARK: - Private Properties
    private var cards: [Card] = []
    private var criminal = false
    
    // MARK: - Overrided Methods
    // –û—Ñ–∏—Ü–∏–∞–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑ –∏ –∏–¥–µ—Ç –Ω–∞ –∫—É—Ö–Ω—é
    override func prepare (for segue: UIStoryboardSegue, sender: Any?) {
        // –û—Ñ–∏—Ü–∏–∞–Ω—Ç –ø—Ä–∏—à–µ–ª –Ω–∞ –∫—É—Ö–Ω—é –∑–∞ –∑–∞–∫–∞–∑–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        if let kitchenVC = segue.destination as? KitchenViewController {
            kitchenVC.delegate = self
        } // –ö–ª–∏–µ–Ω—Ç –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –∑–∞–∫–∞–∑ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π
        else if let cardVC = segue.destination as? CardViewController {
            cardVC.delegate = self
        }
    }
    
    // –û—Ñ–∏—Ü–∏–∞–Ω—Ç —É—Ç–æ—á–Ω—è–µ—Ç –≥–æ—Ç–æ–≤ –ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑
    override func shouldPerformSegue (withIdentifier identifier: String, sender: Any?) -> Bool {
        clientActionButton.titleLabel?.text == "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑"
    }
    
    // MARK: - IB Actions
    // –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∑—ã–≤–∞–µ—Ç –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å—á–µ—Ç–∞
    @IBAction private func clientActionButtonPressed() {
        switch clientActionButton.titleLabel?.text {
        case "–û–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç":
            showPayAlert(
                withTitle: "–û–ø–ª–∞—Ç–∞",
                message: "–ö–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç?",
                buttonTitles: "Ô£øPay", "–±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π", "–°–ë–ü", "–Ω–∞–ª–∏—á–Ω—ã–º–∏")
        case "DESTROY THE APP":
            performSegue(withIdentifier: "openDestroyVC", sender: nil)
        default:
            performSegue(withIdentifier: "openKitchenVC", sender: nil)
        }
    }
}

// MARK: - KitchenViewControllerDelegate
// –°–µ–≥–æ–¥–Ω—è —è –±—É–¥—É –≤–∞—à–∏–º –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–º
extension ClientViewController: KitchenViewControllerDelegate {
    func isCrime() -> Bool {
        criminal
    }
    
    // –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–∫–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç—É
    func completeOrder() {
        if criminal {
            prestupnikAction()
        } else {
            clientStatusLabel.text = "–°–ø–∞—Å–∏–±–æ!"
            clientActionButton.setTitle("–û–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç", for: .normal)
        }
    }
}

// MARK: - CardViewControllerDelegate
extension ClientViewController: CardViewControllerDelegate {
    // Add Card To Saved Cards Array Method
    func add(card: Card) {
        cards.append(card)
    }
    // Show Alert With Saved Cards Method
    func askForCardAgain() {
        showCardsAlert(cards)

    }
}

// MARK: - Alert Methods
private extension ClientViewController {
    // Show Alert Of Choose Payment Way Method
    func showPayAlert(withTitle title: String, message: String, buttonTitles: String...) {
        let alert = UIAlertController(
            title: title,
            message: message,
            preferredStyle: .actionSheet
        )
        
        buttonTitles.forEach { buttonTitle in
            alert.addAction(UIAlertAction(title: buttonTitle, style: .default) { _ in
                if buttonTitle == "–±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π" {
                    self.showCardsAlert(self.cards)
                } else {
                    self.showThanksAlert(withTitle: "–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á–µ—Ç \(buttonTitle)")
                }
            }
            )
        }
        
        alert.addAction(
            UIAlertAction(
                title: "—Å–±–µ–∂–∞—Ç—å –Ω–µ –∑–∞–ø–ª–∞—Ç–∏–≤",
                style: .destructive
            ) { _ in
                if Int.random(in: 0...1) == 0 {
                    self.showThanksAlert(
                        withTitle: "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å–æ–≤–µ—Ä—à–µ–Ω–æ!",
                        message: "–í—ã —É—Å–ø–µ—à–Ω–æ —Å–±–µ–∂–∞–ª–∏ –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω–µ –æ–ø–ª–∞—Ç–∏–≤ —Å—á–µ—Ç",
                        buttonTitle: "Yeah üòé"
                    )
                    self.criminal.toggle()
                } else {
                    self.prestupnikAction()
                }
            }
        )
        alert.addAction(
            UIAlertAction(
                title: "–æ—Ç–º–µ–Ω–∞",
                style: .cancel
            )
        )
        
        present(alert, animated: true)
    }
    
    // Show Alert Of Saved Cards Method
    func showCardsAlert(withTitle title: String = "–ö–∞–∫–æ–π –∫–∞—Ä—Ç–æ–π –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑?", message: String = "", _ cards: [Card]) {
        let alert = UIAlertController(
            title: title,
            message: message,
            preferredStyle: .actionSheet
        )
        
        cards.forEach { card in
            alert.addAction(UIAlertAction(title: card.cardInfo, style: .default) { _ in
                self.showThanksAlert(withTitle: "–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á–µ—Ç –∫–∞—Ä—Ç–æ–π *\(card.fourthFourNumbers)")
                print("Payment with card: \(card.cardNumber), CVV \(card.cvv), valid thru \(card.month)/\(card.year), issued for \(card.cardHolder)")
            }
            )
        }
        
        alert.addAction(
            UIAlertAction(
                title: "–¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É...",
                style: .default
            ) { _ in
                self.performSegue(withIdentifier: "openCardVC", sender: nil)
            }
        )
        
        alert.addAction(
            UIAlertAction(
                title: "–æ—Ç–º–µ–Ω–∞",
                style: .cancel
            )
        )
        
        present(alert, animated: true)
    }
    
    // Shows Alert Of Successful Payment Method
    func showThanksAlert(withTitle title: String, message: String = "–°–ø–∞—Å–∏–±–æ, –∂–¥–µ–º –≤–∞—Å —Å–Ω–æ–≤–∞!", buttonTitle: String = "–û–ö") {
        let alert = UIAlertController(
            title: title,
            message: message,
            preferredStyle: .alert
        )
        
        let buttonAction = UIAlertAction(title: buttonTitle, style: .default) { _ in
            self.clientStatusLabel.text = "–•–æ—á—É –µ—Å—Ç—å!"
            self.clientActionButton.setTitle("–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", for: .normal)
        }
        
        alert.addAction(buttonAction)
        present(alert, animated: true)
    }
}

// MARK: - Private Methods
private extension ClientViewController {
    // Change UI If You Are A Criminal
    func prestupnikAction() {
        updateUI()
        setConstraints()
        setAnimation()
        
        func updateUI() {
            clientStatusLabel.text = "‚ö†Ô∏èüõë‚ö†Ô∏èüõë‚ö†Ô∏è\nPRESTUPNIK DETECTED\nüö®üöîüö®üöîüö®"
            clientStatusLabel.textColor = .black
            clientStatusLabel.font = .boldSystemFont(ofSize: 45)
            clientStatusLabel.textAlignment = .center
            
            clientActionButton.setTitle("DESTROY THE APP", for: .normal)
            clientActionButton.tintColor = .black
            
            view.backgroundColor = .systemRed
            
            policeImageView.image = UIImage(named: "police")
            policeImageView.isHidden.toggle()
        }
        
        func setConstraints() {
            NSLayoutConstraint.activate([
                clientStatusLabel.topAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.topAnchor,
                    constant: 16
                ),
                clientStatusLabel.leadingAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.leadingAnchor,
                    constant: 16
                ),
                clientStatusLabel.trailingAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.trailingAnchor,
                    constant: -16
                ),
                
                clientActionButton.bottomAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.bottomAnchor,
                    constant: -16
                ),
                clientActionButton.leadingAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.leadingAnchor,
                    constant: 16
                ),
                clientActionButton.trailingAnchor.constraint(
                    equalTo: view.safeAreaLayoutGuide.trailingAnchor,
                    constant: -16
                ),
                
                clientActionButton.heightAnchor.constraint(
                    equalToConstant: 60
                )
            ])
        }
        
        func setAnimation() {
            UIView.animate(
                withDuration: 0.2,
                delay: 0,
                options: [.autoreverse, .repeat, .allowUserInteraction],
                animations: { self.view.backgroundColor = .blue },
                completion: nil
            )
        }
    }
}
